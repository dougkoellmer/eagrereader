{
  "description": [
      "IHTML Attribute Definitions",
      "",
      "This describes an XML dialect used by Caja internally for compiling",
      "templates.",
      "See doc/html/templates/ and IHTML.java in the same dir for details."
      ],

  "types": [
    { "key": "ihtml:template::formals",
      "description": "A space separated list of zero or more safe IHTML identifier that specify the names of formal parameters.",
      "optional": false,
      "pattern": "^(?:(?!(?:arguments|break|case|catch|continue|debugger|default|delete|do|else|finally|for|function|if|in|instanceof|new|return|switch|this|throw|try|typeof|var|void|while|with)\\b)(?=[a-zA-Z_])[a-zA-Z_0-9]*[a-zA-Z0-9]_?(?: (?!(?:arguments|break|case|catch|continue|debugger|default|delete|do|else|finally|for|function|if|in|instanceof|new|return|switch|this|throw|try|typeof|var|void|while|with)\\b)(?=[a-zA-Z_])[a-zA-Z_0-9]*[a-zA-Z0-9]_?)*)?$" }
    { "key": "ihtml:template::name",
      "description": "A safe IHTML identifier that identifies the template.",
      "optional": false,
      "pattern": "^(?!(?:arguments|break|case|catch|continue|debugger|default|delete|do|else|finally|for|function|if|in|instanceof|new|return|switch|this|throw|try|typeof|var|void|while|with)$)(?=[a-zA-Z_])[a-zA-Z_0-9]*[a-zA-Z0-9]_?$" },
    { "key": "ihtml:call::ihtml:template",
      "description": "name of the template to call.",
      "optional": false,
      "pattern": "^(?!(?:arguments|break|case|catch|continue|debugger|default|delete|do|else|finally|for|function|if|in|instanceof|new|return|switch|this|throw|try|typeof|var|void|while|with)$)(?=[a-zA-Z_])[a-zA-Z_0-9]*[a-zA-Z0-9]_?$" },
    { "key": "ihtml:do::init",
      "description": "Javascript expression to execute when control enters the element, and which determines whether control enters the body or the alternate.",
      "type": "SCRIPT",
      "optional": true,
      "default": "true" },
    { "key": "ihtml:do::vars",
      "description": "A space separated list of zero or more safe IHTML identifiers that specify variables that enter scope when control enters the element, and which leave scope when control leaves the element.",
      "optional": true,
      "default": "",
      "pattern": "^(?:(?!(?:arguments|break|case|catch|continue|debugger|default|delete|do|else|finally|for|function|if|in|instanceof|new|return|switch|this|throw|try|typeof|var|void|while|with)\\b)(?=[a-zA-Z_])[a-zA-Z_0-9]*[a-zA-Z0-9]_?(?: (?!(?:arguments|break|case|catch|continue|debugger|default|delete|do|else|finally|for|function|if|in|instanceof|new|return|switch|this|throw|try|typeof|var|void|while|with)\\b)(?=[a-zA-Z_])[a-zA-Z_0-9]*[a-zA-Z0-9]_?)*)?$" }
    { "key": "ihtml:do::while",
      "description": "Javascript expression to execute when control leaves the body, and which determines whether control should re-enter the body.",
      "type": "SCRIPT",
      "optional": true,
      "default": "true" },
    { "key": "ihtml:attribute::name",
      "description": "An HTML attribute name.  Case insensitive.",
      "optional": false,
      "pattern": "^[a-zA-Z][a-zA-Z0-9]*(?:-[a-zA-Z0-9]+)*$" },
    { "key": "ihtml:dynamic::expr",
      "description": "a javascript expression that is coerced to a string containing the dynamic content.",
      "type": "SCRIPT",
      "optional": false },
    { "key": "ihtml:message::description",
      "description": "explanatory text meant for translators",
      "optional": true,
      "default": "" },
    { "key": "ihtml:message::name",
      "description": "a safe identifier which identifies the message within a message bundle",
      "optional": false,
      "pattern": "^(?!(?:arguments|break|case|catch|continue|debugger|default|delete|do|else|finally|for|function|if|in|instanceof|new|return|switch|this|throw|try|typeof|var|void|while|with)$)(?=[a-zA-Z_])[a-zA-Z_0-9]*[a-zA-Z0-9]_?$" },
    { "key": "ihtml:ph::name",
      "description": "a safe identifier which identifies the placeholder within its message",
      "optional": false,
      "pattern": "^(?!(?:arguments|break|case|catch|continue|debugger|default|delete|do|else|finally|for|function|if|in|instanceof|new|return|switch|this|throw|try|typeof|var|void|while|with)$)(?=[a-zA-Z_])[a-zA-Z_0-9]*[a-zA-Z0-9]_?$" }
  ],

  "allowed": [
    "ihtml:template::formals",
    "ihtml:template::name",
    "ihtml:call::ihtml:template",
    "ihtml:do::init",
    "ihtml:do::vars",
    "ihtml:do::while",
    "ihtml:dynamic::expr",
    "ihtml:attribute::name",
    "ihtml:message::description",
    "ihtml:message::name",
    "ihtml:ph::name"
  ]
}
