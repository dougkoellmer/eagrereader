<?xml version="1.0" encoding="utf-8" ?>
<project name="EagreReader" default="" basedir=".">
  <!-- Arguments to gwtc and devmode targets -->
  <property name="gwt.args" value="" />

  <property environment="env" />
  
  <!-- Configure path to GWT SDK -->
  <property name="gwt.sdk" location="${env.GWT_HOME}" />
  <property name="gae.sdk" location="${env.GAE_HOME}" />
  
  <import file="${gae.sdk}/config/user/ant-macros.xml" />

  <path id="project.class.path">
    <pathelement location="war/WEB-INF/classes"/>
    <pathelement location="${gwt.sdk}/gwt-user.jar"/>
    <fileset dir="${gwt.sdk}" includes="gwt-dev*.jar"/>
    <!-- Add any additional non-server libs (such as JUnit) -->
    <fileset dir="war/WEB-INF/lib" includes="**/*.jar"/>
  </path>

  <target name="libs" description="Copy libs to WEB-INF/lib">
    <mkdir dir="war/WEB-INF/lib" />
    <copy todir="war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet.jar" />
    <copy todir="war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet-deps.jar" />
    <!-- Add any additional server libs that need to be copied -->
  </target>

  <target name="javac" depends="libs" description="Compile java source to bytecode">
    <mkdir dir="war/WEB-INF/classes"/>
    <javac srcdir="src" includes="**" encoding="utf-8"
        destdir="war/WEB-INF/classes"
        source="1.5" target="1.5" nowarn="true"
        debug="true" debuglevel="lines,vars,source">
      <classpath refid="project.class.path"/>
    </javac>
	<javac srcdir="lib/b33hive/src" includes="**" encoding="utf-8"
        destdir="war/WEB-INF/classes"
        source="1.5" target="1.5" nowarn="true"
        debug="true" debuglevel="lines,vars,source">
      <classpath refid="project.class.path"/>
    </javac>
    <copy todir="war/WEB-INF/classes">
      <fileset dir="src" excludes="**/*.java"/>
	  <fileset dir="lib/b33hive/src" excludes="**/*.java"/>
    </copy>
  </target>

  <target name="gwtc" depends="javac" description="GWT compile to JavaScript (production mode)">
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
      <classpath>
        <pathelement location="src"/>
		<pathelement location="lib/b33hive/src"/>
		
        <path refid="project.class.path"/>
        <pathelement location="../../validation-api-1.0.0.GA.jar" />
        <pathelement location="../../validation-api-1.0.0.GA-sources.jar" />
      </classpath>
      <!-- add jvmarg -Xss16M or similar if you see a StackOverflowError -->
      <jvmarg value="-Xmx256M"/>
      <arg line="-war"/>
      <arg value="war"/>
      <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
      <arg line="${gwt.args}"/>
      <arg value="eagre.reader.Eagrereader"/>
    </java>
  </target>
  
  <target name="build_js" description="Takes GWT output, cats together minified support JS, updates min.js version in HTML to circumvent caching">
	  <exec executable="sh" newenvironment="false" dir="./">
		  <arg value="../project/lib/b33hive/scripts/client/build_js_default.sh" />
	</exec>
  </target>
  
  <target name="build_css" description="Takes a bunch of CSS files, cats them, minifies them, updates resource version in HTML">
	  <exec executable="sh" newenvironment="false" dir="../project/lib/b33hive/scripts/client/">
		  <arg value="minify_css.sh" />
	</exec>
	
	<copy file="./lib/b33hive/bin/min.css" todir="./war/r.app/" />
	
	<exec executable="sh" newenvironment="false" dir="">
		  <arg value="../project/lib/b33hive/scripts/client/update_resource_version.sh" />
		  <arg value="./war/index.jsp" />
		  <arg value="min.css" />
	</exec>
	
  </target>
  
  <target name="minify_html" description="Minifies main HTML file.">
	  <exec executable="sh" newenvironment="false" dir="./">
		  <arg value="../project/lib/b33hive/scripts/client/minify_html.sh" />
		  <arg value="./war/index.jsp" />
		  <arg value="./war/index.min.jsp" />
	</exec>
  </target>
 

  
  <target name="deploy" depends="" description="Deploys a ready-to-go war package to the server environment.">
	 
	 <!-- <input message="Please enter password:" addproperty="gae.password" />
	 
	 <exec executable="echo" inputstring="${gae.password}" newenvironment="false" dir="./">
		  <arg line="echo &quot;${gae.password}&quot; | sh ../project/lib/b33hive/scripts/client/appcfg.sh  email=admin@eagreinteractive.com update ./war" />
		 <arg value="${gae.password} | ../project/lib/b33hive/scripts/client/appcfg.sh" />
		  <arg value="-email=admin@eagreinteractive.com" />
		  <arg value="update" />
		  <arg value="./war" />		
	</exec> -->
	
	<appcfg action="update" war="./war" />
  </target>
  
  <target name="build" depends="gwtc,build_js,build_css,minify_html" description="Build this project" />
  
  <target name="build_and_deploy" depends="build,deploy" description="Build this project" />

  <target name="war" depends="build" description="Create a war file">
    <zip destfile="Hello.war" basedir="war"/>
  </target>

  <target name="clean" description="Cleans this project">
    <delete dir="war/WEB-INF/classes" failonerror="false" />
    <delete dir="war/hello" failonerror="false" />
  </target>

</project>
